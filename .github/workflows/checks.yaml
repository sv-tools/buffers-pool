name: "Code Analysis"

on:
  push:
    tags:
      - v*
    branches:
      - main
  pull_request:
  schedule:
    - cron: "0 0 * * 0"

concurrency:
  group: ${{ format('{0}-{1}', github.workflow, github.head_ref) }}
  cancel-in-progress: true

permissions: read-all

jobs:
  UnitTestJob:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        go:
          - "1.22"
          - "1.23"
          - "1.24"
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
      - uses: actions/setup-go@d35c59abb061a4a6fb18e82ac0862c26744d6ab5 # v5.5.0
        with:
          go-version: ${{ matrix.go }}
      - run: go install github.com/jstemmer/go-junit-report/v2@latest
      - run: go test -race -cover -coverprofile=coverage.out -covermode=atomic
      - run: go test -json 2>&1 | go-junit-report -parser gojson > junit.xml
        if: always()
      - name: Upload coverage reports to Codecov
        if: ${{ !cancelled() }}
        uses: codecov/codecov-action@18283e04ce6e62d37312384ff67231eb8fd56d24 # v5.4.3
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
      - name: Upload test results to Codecov
        if: ${{ !cancelled() }}
        uses: codecov/test-results-action@47f89e9acb64b76debcd5ea40642d25a4adced9f # v1.1.1
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}

  UnitTests:
    needs: UnitTestJob
    runs-on: ubuntu-latest
    steps:
      - run: echo "Unit Tests Passed"

  GolangCI-Lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
      - uses: actions/setup-go@d35c59abb061a4a6fb18e82ac0862c26744d6ab5 # v5.5.0
        with:
          go-version-file: go.mod
      - uses: golangci/golangci-lint-action@4afd733a84b1f43292c63897423277bb7f4313a9 # v8.0.0
        with:
          version: latest
